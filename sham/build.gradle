apply plugin: "java"
apply plugin: "groovy"
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.5

group = 'org.shamdata'
artifactId = 'sham'

dependencies {
  groovy "org.codehaus.groovy:groovy-all:1.8.0"
  compile "javax.servlet:servlet-api:2.5"
  testCompile "org.spockframework:spock-core:0.5-groovy-1.8"
  testCompile "org.springframework:spring-test:3.1.0.RELEASE"
  testCompile "org.springframework:spring-core:3.1.0.RELEASE"
}

signing {
    sign configurations.archives
}

task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
     classifier = 'javadoc'
     from javadoc.destinationDir
}

artifacts {
     archives sourcesJar
     archives javadocJar
}

def fixPom = { pom ->
	pom.project {
		packaging 'jar'
		name 'Sham'
		description 'A test data generation library'
		url 'http://github.com/tomdcc/sham'
		licenses {
			license {
				name 'The MIT License (MIT)'
				url 'http://www.opensource.org/licenses/mit-license.php'
				distribution 'repo'
			}
		}
		scm {
			connection 'git://github.com/tomdcc/sham.git'
			developerConnection 'git@github.com:tomdcc/sham.git'
			url 'git://github.com/tomdcc/sham.git'
		}
		developers {
			developer {
				id 'tomdcc'
				name 'Tom Dunstan'
			}
		}
	}
	pom.whenConfigured { thepom ->
		// don't want to include test deps, or servlet context since it's not always required,
		// and users who want it will have it provided
		thepom.dependencies.clear()
	}
}

def snapshotRepo = 'https://oss.sonatype.org/content/repositories/snapshots'
def releaseRepo = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
def sonatypeRepo = version.endsWith('-SNAPSHOT') ?  snapshotRepo : releaseRepo
uploadArchives {
    repositories {
        mavenDeployer {
			fixPom(pom);
            beforeDeployment { deployment -> signPom(deployment) }
  			repository(url: sonatypeRepo) {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
		}

    }
}
install.repositories.mavenInstaller {
	fixPom(pom)
}