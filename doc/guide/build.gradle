buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.gebish:markdown2book:1.0"
	}
}

task tokeniseManual(type: Copy) {
	from "src"
	into "$buildDir/manual-tokenised"

    def substitutionProperties = [
        'sham-version': project.version,
        'github-url': 'https://github.com/tomdcc/sham',
        'sham-website': 'https://github.com/tomdcc/sham',
        'javadoc-url': '../api/index.html'
    ]
	inputs.properties(substitutionProperties)

	def tokenisableExtensions = ["md", "html"]
	inputs.property("tokenisableExtensions", tokenisableExtensions)

	eachFile { file ->
		if (tokenisableExtensions.any { file.name.endsWith(it) }) {
			file.filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: substitutionProperties)
		}
	}
}


task compileManual {
	dependsOn tokeniseManual

	def source = tokeniseManual.destinationDir
	inputs.dir(source)

	def destination = file("$buildDir/manual-compiled")
	outputs.dir(destination)

	def encoding = "UTF-8"
	inputs.property("encoding", encoding)

	doLast {
		new markdown2book.Generator(source, destination, encoding).generate()
	}
}
